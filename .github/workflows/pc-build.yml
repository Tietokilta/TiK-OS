name: Build pc image
on:
  push:
    branches:
      - main
  schedule:
    # Run every 90 days
    - cron: '0 0 1 1,4,7,10 *'
  workflow_dispatch:  # Allow manual triggering
permissions:
  actions: write
jobs:
  build-pc-image-artifact:
    runs-on: ubuntu-latest
    concurrency:
      group: upload-artifact-${{ github.ref_name }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
      - uses: nixbuild/nix-quick-install-action@v30
      - name: Restore and cache Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          # restore and save a cache using this key
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
          # if there's no cache hit, restore a cache by this prefix
          restore-prefixes-first-match: nix-${{ runner.os }}-
          # collect garbage until Nix store size (in bytes) is at most this number
          # before trying to save a new cache
          gc-max-store-size-linux: 1073741824
          # do purge caches
          purge: true
          # purge all versions of the cache
          purge-prefixes: cache-${{ runner.os }}-
          # created more than this number of seconds ago relative to the start of the `Post Restore` phase
          purge-created: 0
          # except the version with the `primary-key`, if it exists
          purge-primary-key: never
      - run: nix flake check
      - run: nix build .#pc
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: iso-image
          path: result/iso
